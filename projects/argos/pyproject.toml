[build-system]
requires      = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name            = "Argos"
version         = "1.2.0"
description     = "The Many Eyed Sentinel"
authors         = [{ name = "Dr4gnf1y", email = "shadowburner@protonmail.com" }]
readme          = "README.md"
requires-python = ">=3.9,<3.13"

dependencies = [
  # ── Core ML stack ──
  # Pin pairs that are known-good on GH runners and keep NumPy < 2 ABI:
  "torch==2.3.* ; python_version < '3.12'",
  "torchvision==0.18.* ; python_version < '3.12'",
  "torch==2.4.* ; python_version >= '3.12'",
  "torchvision==0.19.* ; python_version >= '3.12'",

  "ultralytics>=8.0",

  # ── ONNX Runtime (platform/py aware to satisfy Win+Py3.12) ──
  "onnxruntime==1.19.2 ; python_version < '3.10'",
  "onnxruntime>=1.22,<1.23 ; python_version >= '3.10' and platform_system == 'Windows'",
  "onnxruntime>=1.22,<1.24 ; python_version >= '3.10' and platform_system != 'Windows'",

  # Keep ONNX toolchain conservative to avoid sympy/abi spats
  "onnx>=1.12,<1.18",

  # ── Imaging / numerics ──
  # OpenCV 4.12+ jumps to NumPy ≥2.3; stay below for now.
  "opencv-python-headless>=4.11,<4.12",

  # NumPy — avoid 2.0.* ABI breakage seen on GH runners
  "numpy!=2.0.*,>=1.26,<2.3",

  "pillow>=10.0,<12.0",
  "pillow-avif-plugin>=1.4",

  "matplotlib>=3.9",
  "scipy>=1.11,<1.15",
  "pandas>=2.2",

  # Infra / utils
  "redis>=5.0",
  "typer[all]>=0.12",
  "thop==0.1.1.post2209072238",
]

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-cov",
  "black",
  "isort",
  "ruff",
  "pre-commit",
  "boto3",
  "moto[all]~=4.2",
]

# Keep audio optional AND let constraints control the version.
audio = [
  "torchaudio",
]

# Optional ONNX graph slimming; kept OUT of core to avoid sympy fights with Torch.
onnx-tools = [
  "onnxslim<0.1.59",
]

[project.scripts]
# Primary CLI names (tests call `target`)
target  = "panoptes.cli:main"
argos   = "panoptes.cli:main"

# Convenience aliases (if you expose task-specific entry points)
d       = "panoptes.cli:main_detect"
detect  = "panoptes.cli:main_detect"
hm      = "panoptes.cli:main_heatmap"
heatmap = "panoptes.cli:main_heatmap"
gj      = "panoptes.cli:main_geojson"
geojson = "panoptes.cli:main_geojson"
all     = "panoptes.cli:main_all"

[tool.hatch.build]
include = [
  "panoptes/**/*.py",
  "panoptes/assets/*",
]
exclude = [
  "panoptes/model/*.onnx",
  "panoptes/model/*.pt",
]

[tool.pytest.ini_options]
addopts   = "-q"
testpaths = ["tests"]

[tool.black]
line-length = 100

[tool.isort]
profile           = "black"
line_length       = 100
force_single_line = true

[tool.ruff]
line-length = 100
