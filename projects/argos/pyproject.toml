
[build-system]
requires      = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name            = "panoptes"
version         = "0.1.0"
description     = "One-step JPEG / video inference for small-object detection."
authors         = [{ name = "YOUR NAME", email = "you@example.com" }]
readme          = "README.md"
requires-python = ">=3.9"

# ───────────────────────── runtime ─────────────────────────
dependencies = [
  # Core inference stack
  "torch>=2.2",
  "torchvision>=0.17",
  "ultralytics>=8.0",

  # ONNX Runtime - split pins so CI works on both 3.9 & ≥3.10
  "onnxruntime==1.19.2 ; python_version < '3.10'",
  "onnxruntime>=1.22,<1.24 ; python_version >= '3.10'",

  # CV / numeric
  "opencv-python-headless>=4.10,<4.12",   # avoid NumPy 2 ABI jump
  "numpy<2",
  "pillow>=11.3",
  "pillow-avif-plugin>=1.4",

  # Visualisation / processing helpers
  "matplotlib",
  "scipy>=1.11",
  "pandas",
  "redis>=5.0",            # optional - used for heatmap accumulation id

  # CLI
  "typer[all]>=0.12",
]

[project.optional-dependencies]
dev = [
  # Testing & QA
  "pytest",
  "pytest-cov",
  "black",
  "isort",
  "ruff",
  "pre-commit",

  # Local AWS stack
  "boto3",
  "moto[all] ~= 4.2",
]

[project.scripts]
target = "panoptes.cli:main"   # installs the `target` shell command

[tool.hatch.build]
include = [
  "panoptes/**/*.py",
  "panoptes/model/*.onnx",
  "panoptes/assets/*",
]

[tool.pytest.ini_options]
addopts   = "-q"
testpaths = ["tests"]

# ---------------------------------------------------------------------------
#  Ruff / Black / Isort unified style-config (minimal - tweak as you like)
# ---------------------------------------------------------------------------
[tool.black]
line-length = 100

[tool.isort]
profile      = "black"
line_length  = 100
force_single_line = true

[tool.ruff]
line-length = 100
